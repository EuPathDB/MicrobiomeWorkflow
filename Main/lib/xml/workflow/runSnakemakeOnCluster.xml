<workflowGraph name="runSnakemakeOnCluster">
  <param name="projectName"/>
  <param name="parentDataDir"/>
  <param name="extDBName"/>
  <param name="snakefile"/>
  <param name="config"/>

  <constant name="dataDir">$$parentDataDir$$/$$extDBName$$/cluster</constant>

  <!-- TODO consider if general case can be done with remote()-->

  <step name="makeClusterDir" stepClass="ReFlow::StepClasses::MakeDataDir">
    <paramValue name="dataDir">$$extDBName$$/cluster</paramValue>
  </step>

  <step name="mirrorDatadirToCluster" stepClass="ReFlow::StepClasses::MirrorToComputeCluster" stepLoadTypes="toCluster">
    <paramValue name="fileOrDirToMirror">$$extDBName$$</paramValue>
    <depends name="makeClusterDir"/>
  </step>
 
  <!-- use to copy input files for snakefile first rule --> 
  <step name="makeSnakemakeInputDir" stepClass="MicrobiomeWorkflow::Main::WorkflowSteps::MakeSnakemakeInputDir">
    <paramValue name="taskInputDir">$$dataDir$$/input</paramValue>
    <paramValue name="extDBName">$$extDBName$$</paramValue>
    <depends name="makeClusterDir"/>
  </step>

  <step name="mirrorToCluster" stepClass="ReFlow::StepClasses::MirrorToComputeCluster" stepLoadTypes="toCluster">
    <paramValue name="fileOrDirToMirror">$$dataDir$$/input</paramValue>
    <depends name="makeSnakemakeInputDir"/>
    <depends name="mirrorDatadirToCluster"/>
  </step>

  <step name="runClusterTask" stepClass="ReFlow::StepClasses::RunAndMonitorSnakemake">
    <paramValue name="taskInputDir">$$dataDir$$/input</paramValue>
    <paramValue name="snakefile">$$snakefile$$</paramValue>
    <paramValue name="config">$$config$$</paramValue>
    <paramValue name="numJobs">32</paramValue>
    <paramValue name="maxMemoryGigs">15</paramValue>
    <depends name="mirrorToCluster"/>
  </step>

  <!-- last step of snakefile should move anything you want copied back to elm to output dir -->
  <step name="mirrorFromCluster" stepClass="ReFlow::StepClasses::MirrorFromComputeCluster" stepLoadTypes="fromCluster">
    <paramValue name="fileOrDirToMirror">$$dataDir$$/output</paramValue>
    <paramValue name="outputDir">$$dataDir$$/output/mainresult</paramValue>
    <paramValue name="outputFiles">TODO</paramValue>
    <paramValue name="deleteAfterCopy">true</paramValue>
    <depends name="runClusterTask"/>
  </step>

</workflowGraph>
